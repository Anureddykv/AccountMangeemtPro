// Generated by view binder compiler. Do not edit!
package com.fincare.accmangement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fincare.accmangement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnDelete;

  @NonNull
  public final ImageButton btnEdit;

  @NonNull
  public final LinearLayout itemAccount;

  @NonNull
  public final TextView txtAccountId;

  @NonNull
  public final TextView txtAccountName;

  private ItemAccountBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnDelete,
      @NonNull ImageButton btnEdit, @NonNull LinearLayout itemAccount,
      @NonNull TextView txtAccountId, @NonNull TextView txtAccountName) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.itemAccount = itemAccount;
    this.txtAccountId = txtAccountId;
    this.txtAccountName = txtAccountName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      ImageButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      ImageButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      LinearLayout itemAccount = (LinearLayout) rootView;

      id = R.id.txtAccountId;
      TextView txtAccountId = ViewBindings.findChildViewById(rootView, id);
      if (txtAccountId == null) {
        break missingId;
      }

      id = R.id.txtAccountName;
      TextView txtAccountName = ViewBindings.findChildViewById(rootView, id);
      if (txtAccountName == null) {
        break missingId;
      }

      return new ItemAccountBinding((LinearLayout) rootView, btnDelete, btnEdit, itemAccount,
          txtAccountId, txtAccountName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
